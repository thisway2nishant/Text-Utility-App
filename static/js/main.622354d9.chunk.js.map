{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutTxt","role","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","prevText","setPrevText","_useState3","_useState4","nextText","setNextText","_useState5","_useState6","text","setText","Fragment","style","color","width","margin","fontFamily","heading","value","onChange","event","target","rows","placeholder","backgroundColor","border","newTxt","toUpperCase","toLowerCase","split","map","word","charAt","slice","join","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","replace","blob","Blob","anchor","download","window","URL","createObjectURL","display","body","appendChild","click","removeChild","filter","element","length","Alert","height","alert","Type","msg","About","borderRadius","footer","padding","listStyle","textDecoration","marginLeft","defaultProps","App","setMode","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.622354d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n      <div className=\"container-fluid\">\r\n        {/* <img src=\"C:\\Users\\thisw\\OneDrive\\Desktop\\Web Dev\\CwH projects\\TextUtil Project\\textutils\\public\\favicon-32x32.png\" alt=\"logo\"></img> */}\r\n        <a className=\"navbar-brand\" href=\"#textform\">\r\n          <strong>{props.title}</strong>\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#textform\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"#about\">\r\n                {props.aboutTxt}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'? 'dark': 'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                aria-checked=\"false\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Dark Mode\r\n              </label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutTxt: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title\",\r\n  aboutTxt: \"Set about\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const [prevText, setPrevText] = useState('');\r\n    const [nextText, setNextText] = useState('');\r\n\r\n    // const textRecord = (text, type)=>{\r\n    //   if(type === 'prev'){\r\n    //     setPrevText(text);\r\n    //     console.log(prevText);\r\n        \r\n    //   }\r\n    //   else{\r\n    //     setNextText(text);\r\n    //     console.log(nextText);\r\n    //   }\r\n    // }\r\n    const handleUpButton = ()=>{\r\n        //console.log(\"Uppercase Button Clicked\")\r\n        setPrevText(text);\r\n        let newTxt = text.toUpperCase();\r\n        setText(newTxt);\r\n        setNextText(text);\r\n    }\r\n\r\n    const handleLoButton = ()=>{\r\n        //console.log(\"Uppercase Button Clicked\")\r\n        setPrevText(text);\r\n        let newTxt = text.toLowerCase();\r\n        setText(newTxt);\r\n        setNextText(text);\r\n    }\r\n\r\n    const handleClearButton = ()=>{\r\n      setPrevText(text);\r\n      setText('');\r\n      setNextText(text);\r\n      props.showAlert(\"Text Cleared!\", \"success\")\r\n    }\r\n\r\n    const handleTiCButton = ()=>{\r\n     // let rawTxt = text.split(' ');\r\n     setPrevText(text);\r\n      let rawTxt =text.toLowerCase().split(' ');\r\n      let newTxt = rawTxt.map((word)=>{\r\n        return word.charAt(0).toUpperCase()+word.slice(1);\r\n      })\r\n      newTxt = newTxt.join(' ');\r\n      setText(newTxt);\r\n      setNextText(text);\r\n    }\r\n\r\n    const handleSeCButton = ()=>{\r\n      setPrevText(text);\r\n      let rawTxt = text.toLowerCase().split('.');\r\n      //console.log(rawTxt);\r\n      let newTxt = rawTxt.map((word)=>{\r\n         if(word.charAt(0) === ' '){\r\n           return word.charAt(1).toUpperCase()+word.slice(2);\r\n         }\r\n         else{\r\n           return word.charAt(0).toUpperCase()+word.slice(1);\r\n         }\r\n      })\r\n      //console.log(newTxt);\r\n      newTxt = newTxt.join('. ');\r\n      setText(newTxt);\r\n      setNextText(text);\r\n    }\r\n\r\n    const handleCopyButton = ()=>{\r\n       let text = document.getElementById('textBox')\r\n       text.select();\r\n      if(text.value===null){\r\n        props.showAlert('TextArea is empty', 'warning');\r\n      }\r\n      else{\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('Text Copied!', 'success');\r\n      }\r\n    }\r\n\r\n    const handleRemCharButton = ()=>{\r\n      setPrevText(text);\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      setNextText(text);\r\n    }\r\n\r\n    const handleSaveButton = ()=>{\r\n      //var text = document.getElementById(\"my-textarea\").value;\r\n      let newText = text.replace(/\\n/g, \"\\r\\n\"); // To retain the Line breaks.\r\n      let blob = new Blob([newText], { type: \"text/plain\"});\r\n      let anchor = document.createElement(\"a\");\r\n      anchor.download = \"myText.txt\";\r\n      anchor.href = window.URL.createObjectURL(blob);\r\n      anchor.target =\"_blank\";\r\n      anchor.style.display = \"none\"; // just to be safe!\r\n      document.body.appendChild(anchor);\r\n      anchor.click();\r\n      document.body.removeChild(anchor);\r\n    }\r\n\r\n    const handleUndoButton = ()=>{\r\n      \r\n      let newTxt = prevText;\r\n      setNextText(text);\r\n      setText(newTxt);\r\n    }\r\n\r\n    const handleRedoButton = ()=>{\r\n      let newTxt = nextText;\r\n      setPrevText(text);\r\n      setText(newTxt);\r\n    }\r\n\r\n    const handleChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h2 className=\"my-3\" style={{width:\"fit-content\", margin: 'auto', fontFamily:\"'Roboto Condensed', sans-serif\"}}>{props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"textBox\"\r\n          value={text} onChange={handleChange}\r\n          rows=\"8\"\r\n          placeholder=\"Enter your text here.\"\r\n          style={{color: props.mode==='light'?'black':'white', backgroundColor: props.mode==='light'?'white':'#212529', border:props.mode==='light'?'2px solid black':'2px solid white'}}\r\n        ></textarea>\r\n      </div>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleUpButton}>Upper Case</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleLoButton}>Lower Case</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleTiCButton}>Title Case</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleSeCButton}>Sentence Case</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleRemCharButton}>Remove Extra Spaces</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleClearButton}>Clear Text</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleCopyButton}>Copy</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleSaveButton}>Save</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleUndoButton}>Undo</button>\r\n      <button className={`btn btn-${props.mode==='light'?'primary':'secondary'} mx-2 my-2`} onClick={handleRedoButton}>Redo</button>\r\n    </div>\r\n    <hr></hr>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <table className={`table table-striped table-bordered ${props.mode==='light'?'':'table-dark'}`} style={{border: props.mode==='light'?'2px solid black':'2px solid white'}}>\r\n        <thead>\r\n          <tr>\r\n            <th><strong>Summary Of Your Text</strong></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n       <tbody>\r\n         <tr>\r\n           <td>Number of Words</td>\r\n           <td>{text.split(\" \").filter((element)=>{return element.length !==0}).length}</td>\r\n         </tr>\r\n         <tr>\r\n           <td>Number of Characters</td>\r\n           <td>{text.length}</td>\r\n         </tr>\r\n         <tr>\r\n           <td>Number of Sentences</td>\r\n           <td>{text.split(/[.?]+/).filter((element)=>{return element.length !==0}).length}</td>\r\n         </tr>\r\n         <tr>\r\n           <td>Reading Time</td>\r\n           <td>{0.08 * text.split(\" \").filter((element)=>{return element.length !==0}).length} Minutes</td>\r\n         </tr>\r\n       </tbody>\r\n      </table>\r\n      {/* <hr></hr>\r\n      <div className=\"container my-3\">\r\n        <h3 style={{width:\"fit-content\", margin: 'auto'}}>Preview of your Text</h3>\r\n        <p style={{marginTop: '1rem',marginBottom: '1rem',height: '100px', border: props.mode==='light'?'1px solid black':'1px solid white', padding: '5px'}}>\r\n          {text===''?'Nothing to show. Enter text above':text}\r\n        </p>\r\n      </div> */}\r\n        {/* <h2>Summary of Your Text</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.05 * text.split(\" \").length} Minutes read.</p>\r\n        <h2>Preview</h2>\r\n        <p>{text===''?'Nothing to show. Enter text above':text}</p> */}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div className=\"container\" style={{height: \"50px\"}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.Type}`} role=\"alert\">\r\n      <strong>{props.alert.msg}</strong>\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div className='container my-4 ' style={{border: props.mode==='light'?'2px solid black':'2px solid white', backgroundColor: props.mode==='light'?'#f0efef':'#212529', color: props.mode==='light'?'black':'white', borderRadius: '5px'}}>\r\n      <h2 style={{width:\"fit-content\", margin: '8px auto'}}><strong>About Us</strong></h2>\r\n      <p>\r\n      Knowing the word count of a text can be important. For example, if an author has to write a minimum or maximum amount of words for an article, essay, report, story, book, paper, you name it. Text Utils will help to make sure its word count reaches a specific requirement or stays within a certain limit.\r\n      </p>\r\n      <p>\r\n      To check word count, simply place your cursor into the text box above and start typing. You'll see the number of characters and words increase or decrease as you type, delete, and edit them. You can also copy and paste text from another program over into the online editor above.\r\n      </p>\r\n      <p><strong>Disclaimer: We strive to make our tools as accurate as possible but we cannot guarantee it will always be so.</strong></p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function footer() {\r\n  return (\r\n    <div>\r\n      <footer style={{backgroundColor: 'black', height: '200px', color: 'white', padding: '5px'}}>\r\n         <div style={{display: 'flex'}}>\r\n          <ul style={{listStyle: 'none'}}>\r\n              <li><p>Site Map</p></li>\r\n              <li><a href='/' style={{textDecoration: 'none', color: 'white'}}>Home</a></li>\r\n              <li><a href='#about' style={{textDecoration: 'none', color: 'white'}}>About</a></li>\r\n              <li><a href='/' style={{textDecoration: 'none', color: 'white'}}>Contact Us</a></li>\r\n              <li><a href='/' style={{textDecoration: 'none', color: 'white'}}>Privacy Policy</a></li>\r\n          </ul>\r\n          <ul style={{listStyle: 'none', marginLeft: '125px'}}>\r\n              <li><p>Follow us</p></li>\r\n              <li><a href='/' style={{textDecoration: 'none', color: 'white'}}>Twitter</a></li>\r\n              <li><a href='/' style={{textDecoration: 'none', color: 'white'}}>Instagram</a></li>\r\n              <li><a href='/' style={{textDecoration: 'none', color: 'white'}}>Facebook</a></li>\r\n          </ul>\r\n         </div>\r\n          <p className='mx-3'>All Rights Reserved. &copy;2022 Nishant Kumar</p>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n","\nimport \"./App.css\";\nimport React, {useState} from 'react'\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Footer from \"./components/Footer\";\n\n\nfunction App() {\nconst [mode, setMode] = useState(\"light\");\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message, type)=>{\n   setAlert({\n     msg: message,\n     Type: type\n   })\n\n   setTimeout(() => {\n     setAlert(null);\n   }, 2000);\n}\n\nconst toggleMode = ()=>{\n  if(mode === \"light\"){\n    setMode(\"dark\");\n    document.body.style.backgroundColor= 'grey';\n    showAlert('Dark Mode Enabled', 'success');\n  }\n  else{\n    setMode(\"light\");\n    document.body.style.backgroundColor= 'white';\n    showAlert('Dark Mode Disabled', 'success');\n  }\n}\n\n  return (\n    <>\n      <Navbar title=\"Text Utils\" aboutTxt=\"About\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n        <section id=\"textform\">\n        <TextForm heading=\"Enter the text below for analyzing\" mode={mode} showAlert={showAlert}/>\n        </section>\n        <section id=\"about\">\n        <About mode={mode}/>\n        </section>  \n        <Footer />\n      </div>    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}